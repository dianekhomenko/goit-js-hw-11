{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,S,2CCKO,MA0BMC,EAAgBC,IAC3B,MAAMC,EAJuB,CAAAD,GAC7BA,EAAME,QAAO,CAACC,EAAKC,IAASD,EAxBN,CAAAC,GACtB,oCAAoCA,EAAKC,8EAE9BD,EAAKE,gCACJF,EAAKG,sBAAsBH,EAAKI,2HAI1BJ,EAAKK,iEAGLL,EAAKM,oEAGFN,EAAKO,wEAGJP,EAAKQ,gDAOOC,CAAST,IAAO,IAGnCU,CAAgBd,GAC/Be,EAAKC,QAAQC,mBAAmB,YAAahB,EAAO,EAGzCiB,EAAW,IAAIC,EAAAC,GAAJ,CAAmB,gBAAiB,CAC1DC,aAAc,MACdC,aAAc,MCpCT,SAASC,IACd,MAAQC,OAAQC,GAAeC,SAC5BC,cAAc,YACdC,kBAAkBC,wBAErBC,OAAOC,SAAS,CACdC,IAAkB,EAAbP,EACLQ,SAAU,U,CAUaP,SAASQ,iBAAiB,UAAU,MAHtDR,SAASS,iBAAmBT,SAASU,MAItBC,UAPA,IAQpBtB,EAAKiB,IAAIM,UAAUC,OAAO,UAE1BxB,EAAKiB,IAAIM,UAAUE,IAAI,SAAS,IFhBpC,IAAIC,EACG,MAKM1B,EAAO,CAClB2B,MAAOhB,SAASC,cAAc,SAC9BgB,KAAMjB,SAASC,cAAc,gBAC7BX,QAASU,SAASC,cAAc,YAChCiB,KAAMlB,SAASC,cAAc,cAC7BkB,UAAWnB,SAASC,cAAc,gBAClCK,IAAKN,SAASC,cAAc,gBAC5BmB,QAASpB,SAASC,cAAc,YAChCoB,UAAWrB,SAASC,cAAc,gBAG9BqB,EAAYC,MAAMC,IACtBA,EAAEC,iBACFhC,EAAAtB,GAASuD,QAAQC,SAAS,CACxBC,gBAAiB,cACjBC,qBAAsB,MAExB,MAAMC,EAASzC,EAAK2B,MAAMe,MACpBC,EAAQ3C,EAAK+B,QAAQW,MAEhB,WAAXP,EAAES,MAAgC,WAAXT,EAAES,MGfzB5C,EAAKC,QAAQ4C,UAAY,GACzBC,YAAc,EACd9C,EAAK8B,UAAUP,UAAUC,OAAO,eAChCxB,EAAKgC,UAAUT,UAAUC,OAAO,SHY2BE,GAAe,EAE1E,IACE,MAAMqB,QAAiBC,EAAAC,QAAMC,IAC3B,yIAAqCT,UAAef,WAAqBiB,KAG3E3C,EAAK6B,KAAKN,UAAUC,OAAO,QAEJ,GAAvBuB,EAASI,KAAKC,QGtChBpD,EAAK6B,KAAKN,UAAUE,IAAI,QACxBrB,EAAAtB,GAASuE,OAAOC,QACd,6EHsCW,WAAXnB,EAAES,MAA6C,IAAxBG,EAASI,KAAKC,OACjChD,EAAAtB,GAASuE,OAAOE,QACd,oBAAoBR,EAASI,KAAKK,qBAIxC9B,EAAcqB,EAASI,KAAKK,UAAY,IAA8B,IAAxBT,EAASI,KAAKC,QGvC9DpD,EAAK6B,KAAKN,UAAUE,IAAI,QACxBrB,EAAAtB,GAASuE,OAAOI,KACd,+DHyCAzE,EAAc+D,EAASI,KAAKO,MAC5BvD,EAASwD,UAEE,UAAXxB,EAAES,MAAmBpC,G,CACrB,MAAOoD,GACPC,QAAQC,IAAIF,E,CACb,QACCxD,EAAAtB,GAASuD,QAAQb,Q,GAIrBxB,EAAKiB,IAAIE,iBAAiB,SEtCH,KACrBR,SAASU,KAAK0C,eAAe,CAC3B7C,SAAU,UACV,IFoCJlB,EAAK4B,KAAKT,iBAAiB,SAAUc,GACrCjC,EAAK6B,KAAKV,iBAAiB,QAASc,GACpCjC,EAAK+B,QAAQZ,iBAAiB,SAAUc","sources":["src/index.js","src/partials/generate-content.js","src/partials/scroll.js","src/partials/search-params.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport axios from 'axios';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport { emptySearch, endSearch, onSubmit } from './partials/search-params';\nimport { insertContent, lightbox } from './partials/generate-content';\nimport { goToTop, scrolling } from './partials/scroll';\n\nlet currentPage;\nexport const API_KEY = 'key=34409732-2eb98e59aad866aa53f09776f';\nexport const BASE_URL = 'https://pixabay.com/api/';\nexport const PARAMS =\n  '&image_type=photo&orientation=horizontal&safesearch=true&per_page=40';\n\nexport const refs = {\n  input: document.querySelector('input'),\n  form: document.querySelector('.search-form'),\n  gallery: document.querySelector('.gallery'),\n  load: document.querySelector('.load-more'),\n  searchBar: document.querySelector('.full-search'),\n  top: document.querySelector('.back-to-top'),\n  sorting: document.querySelector('.sorting'),\n  sortlabel: document.querySelector('.sort-label'),\n};\n\nconst getPhotos = async e => {\n  e.preventDefault();\n  Notiflix.Loading.standard({\n    backgroundColor: 'transparent',\n    cssAnimationDuration: 800,\n  });\n  const search = refs.input.value;\n  const order = refs.sorting.value;\n\n  e.type === 'submit' || e.type === 'change' ? onSubmit() : (currentPage += 1);\n\n  try {\n    const response = await axios.get(\n      `${BASE_URL}?${API_KEY}${PARAMS}&q=${search}&page=${currentPage}&order=${order}`\n    );\n\n    refs.load.classList.remove('hide');\n\n    response.data.total == 0 ? emptySearch() : '';\n\n    e.type === 'submit' && response.data.total !== 0\n      ? Notiflix.Notify.success(\n          `Hooray! We found ${response.data.totalHits} images.`\n        )\n      : '';\n\n    currentPage > response.data.totalHits / 40 && response.data.total !== 0\n      ? endSearch()\n      : '';\n\n    insertContent(response.data.hits);\n    lightbox.refresh();\n\n    e.type === 'click' ? scrolling() : '';\n  } catch (error) {\n    console.log(error);\n  } finally {\n    Notiflix.Loading.remove();\n  }\n};\n\nrefs.top.addEventListener('click', goToTop);\nrefs.form.addEventListener('submit', getPhotos);\nrefs.load.addEventListener('click', getPhotos);\nrefs.sorting.addEventListener('change', getPhotos);\n","import { refs } from '..';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n\nexport const createLi = item =>\n  `<div class=\"photo-card\" data-id=\"${item.id}\">\n  <button class=\"save\" onclick=\"onClickSave()\"></button>\n  <a href=\"${item.largeImageURL}\">\n  <img src=\"${item.webformatURL}\" alt=\"${item.tags}\" loading=\"lazy\" width=\"320\" height=\"200\"/>\n  <div class=\"info\">\n  \n    <p class=\"info-item\">\n      <b>Likes</b>${item.likes}\n    </p>\n    <p class=\"info-item\">\n      <b>Views</b>${item.views}\n    </p>\n    <p class=\"info-item\">\n      <b>Comments</b>${item.comments}\n    </p>\n    <p class=\"info-item\">\n      <b>Downloads</b>${item.downloads}\n    </p>\n  </div>\n  </a>\n</div>`;\n\nexport const generateContent = array =>\n  array.reduce((acc, item) => acc + createLi(item), '');\n\nexport const insertContent = array => {\n  const result = generateContent(array);\n  refs.gallery.insertAdjacentHTML('beforeend', result);\n};\n\nexport const lightbox = new SimpleLightbox('.photo-card a', {\n  captionsData: 'alt',\n  captionDelay: 250,\n});","import { refs } from '..';\n\nexport function scrolling() {\n  const { height: cardHeight } = document\n    .querySelector('.gallery')\n    .firstElementChild.getBoundingClientRect();\n\n  window.scrollBy({\n    top: cardHeight * 2,\n    behavior: 'smooth',\n  });\n}\n\nexport const showOnPx = 100;\n\nexport const scrollContainer = () => {\n  return document.documentElement || document.body;\n};\n\nexport const scrollEvent = document.addEventListener('scroll', () => {\n  if (scrollContainer().scrollTop > showOnPx) {\n    refs.top.classList.remove('hidden');\n  } else {\n    refs.top.classList.add('hidden');\n  }\n});\n\nexport const goToTop = () => {\n  document.body.scrollIntoView({\n    behavior: 'smooth',\n  });\n};\n","import { refs } from '..';\nimport Notiflix from 'notiflix';\n\nexport function emptySearch() {\n  refs.load.classList.add('hide');\n  Notiflix.Notify.warning(\n    'Sorry, there are no images matching your search query. Please try again.'\n  );\n}\n\nexport function endSearch() {\n  refs.load.classList.add('hide');\n  Notiflix.Notify.info(\n    \"We're sorry, but you've reached the end of search results.\"\n  );\n}\n\nexport function onSubmit() {\n  refs.gallery.innerHTML = '';\n  currentPage = 1;\n  refs.searchBar.classList.remove('full-search');\n  refs.sortlabel.classList.remove('hide');\n}\n"],"names":["$7Y9D8","parcelRequire","$bfb626b7e66e823a$export$c23a7dc17ab580c2","array","result","reduce","acc","item","id","largeImageURL","webformatURL","tags","likes","views","comments","downloads","$bfb626b7e66e823a$export$5c8f7bec9aa9905b","$bfb626b7e66e823a$export$4edbeb3aa79c6b8a","$1f0dc3b9307be026$export$21666b427502ea6d","gallery","insertAdjacentHTML","$bfb626b7e66e823a$export$c2b330519424b9e8","$parcel$interopDefault","$fZKcF","captionsData","captionDelay","$9bac8155c7418349$export$77825fa6f4ae045f","height","cardHeight","document","querySelector","firstElementChild","getBoundingClientRect","window","scrollBy","top","behavior","addEventListener","documentElement","body","scrollTop","classList","remove","add","$1f0dc3b9307be026$var$currentPage","input","form","load","searchBar","sorting","sortlabel","$1f0dc3b9307be026$var$getPhotos","async","e","preventDefault","Loading","standard","backgroundColor","cssAnimationDuration","search","value","order","type","innerHTML","currentPage","response","$2shzp","default","get","data","total","Notify","warning","success","totalHits","info","hits","refresh","error","console","log","scrollIntoView"],"version":3,"file":"index.661cf9ec.js.map"}